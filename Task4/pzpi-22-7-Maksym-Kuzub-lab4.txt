Міністерство освіти і науки України
Харківський національний університет радіоелектроніки



Кафедра програмної інженерії



Звіт
З дисципліни «Аналіз та рефакторинг коду»
З лабораторної роботи №4




Виконав:
ст. гр. ПЗПІ-22-7
Кузуб М. О. 

Перевів:
доц. каф. ПІ
Сокорчук І. П. 



	







Харків 2024

Мета роботи: 
     Розробити програмне забезпечення для IoT або SmartDevice пристрою, створеного на базі будь-якої поширеної на сьогодні платформи, придатної для реалізації вбудованих систем (Embedded System). 

Хід роботи: 
1. Розробка будови програмного забезпечення ІоТ клієнта
     Програмне забезпечення для ІоТ клієнта складається з кількох компонентів, кожен з яких виконує певні функції для забезпечення взаємодії з користувачем та зовнішніми сервісами (зокрема, з Google API для обчислення відстані між точками):
? Form1: Основна форма для введення та обробки даних користувача, включаючи введення ID працівника, вантажу, адреси відправлення та призначення. Тут також реалізована логіка обчислення відстані між точками за допомогою Google Distance API і підрахунок витрат пального. Після цього дані додаються до бази даних.
? Form2: Форма для адміністратора, яка показує дані з бази даних (наприклад, всі поїздки).
? login: Форма для авторизації користувача, яка перевіряє логін та пароль за допомогою запиту до бази даних і визначає, чи є користувач адміністратором. В залежності від ролі відкривається відповідна форма.
2. UML діаграма прецедентів для ІоТ клієнта
     Прецеденти в системі описують взаємодію між користувачами та системою, що відображають їхні функціональні вимоги:
     Актори:
? Користувач: Авторизується в системі, вводить дані для поїздки, обчислює відстань і витрати пального, додає поїздку до бази даних.
? Адміністратор: Має доступ до даних про всі поїздки через форму для адміністратора.
     Прецеденти:
1. Авторизація користувача
? Користувач вводить логін і пароль для авторизації.
2. Обчислення відстані
? Користувач вводить адреси відправлення та призначення, система викликає Google API для обчислення відстані.
3. Додавання поїздки до бази даних
? Користувач вводить дані про поїздку і система зберігає їх у базі даних.
4. Перегляд поїздок (Адміністратор)
? Адміністратор переглядає всі поїздки через форму для адміністратора.
3. Розробка бізнес логіки та функцій налаштування ІоТ клієнта
     Бізнес логіка включає:
? Обчислення відстані між двома точками: Використовує Google Distance API для отримання відстані в кілометрах між точками.
? Розрахунок витрат пального: Для отриманої відстані система розраховує витрати пального за формулою (8 літрів на 100 км).
? Додавання поїздки до бази даних: Після обчислення відстані та витрат пального дані зберігаються у базі даних, що дозволяє адміністратору переглядати їх.
4. UML діаграма діяльності для ІоТ клієнта
     Основні етапи діяльності:
1. Логін користувача:
? Користувач вводить логін і пароль.
? Перевірка правильності введених даних в базі.
? Визначення ролі користувача (звичайний або адміністратор).
2. Додавання поїздки:
? Користувач вводить дані про поїздку.
? Перевірка на заповненість полів.
? Запит до Google API для обчислення відстані.
? Обчислення витрат пального.
? Збереження даних у базі даних.
5. Програмна реалізація бізнес логіки та функцій налаштування ІоТ клієнта
     Програмна реалізація вже представлена у коді:
? В Form1.cs реалізовано:
? Обчислення відстані між точками через Google API.
? Розрахунок витрат пального.
? Додавання поїздки до бази даних.
? В Form2.cs реалізовано відображення всіх поїздок для адміністратора.
? В login.cs реалізована авторизація користувачів, перевірка їхніх ролей та відкриття відповідних форм.

Лінка на архів: https://drive.google.com/drive/folders/1cUeX3107pXQNDml1rR8KzSA69l_KlQUK?usp=drive_link

Висновок:
     Розроблене програмне забезпечення для ІоТ клієнта ефективно реалізує основні функціональні вимоги: авторизацію користувачів, обчислення відстані між точками через Google API, розрахунок витрат пального та збереження даних у базі даних. Система також має можливість переглядати поїздки для адміністратора через окрему форму. Програмне забезпечення забезпечує коректну взаємодію з користувачем та зовнішніми сервісами, що робить його зручним і ефективним інструментом для управління поїздками та обліку витрат пального.
